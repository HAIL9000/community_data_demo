<head>
  <meta charset="utf-8">
  <title>Puppet Pull Request Metrics</title>
  <link type="text/css" rel="stylesheet" href="css/dc.css"/>
  <style type = "text/css">
    div#per-week{
      .dc-chart rect.bar{
        fill: #7D64AC;
      }
    }
  </style>
  <script src="js/d3.v3/d3.v3.js"></script>
  <script src ="js/crossfilter-1.2.0/crossfilter.min.js"></script>
  <script src="js/dc.js-1.4.0/dc.js"></script>
</head>
  <script type="text/javascript">
      d3.json('/data/puppet_pulls', function(dataset) {
          var dateFormat = d3.time.format.utc('%Y-%m-%dT%H:%M:%SZ');

          dataset = dataset.map(function(d){
            return {'time': d3.time.month(dateFormat.parse(d.close_time)),
                    'repo': d.repo_name,
                    'ttl': d.ttl,
                    'week': d3.time.week(dateFormat.parse(d.close_time))};
                   });

          time_domain = d3.extent(dataset, function(d){return d.time;});

          week_domain = d3.extent(dataset, function(d){return d.week;});

          var pull_requests = crossfilter(dataset);
          var all = pull_requests.groupAll();

          var timeDimension = pull_requests.dimension(function(d){return d.time;});
          var timeGroup = timeDimension.group().reduceCount().orderNatural();

          var repoDimension = pull_requests.dimension(function(d){return d.repo;});
          var repoGroup = repoDimension.group().reduceCount().orderNatural();

          var weekDimension = pull_requests.dimension(function(d){return d.week;});
          var weekGroup = weekDimension.group().reduceCount().orderNatural();


          var lifetimeGroup = timeDimension.group().reduce(
            function(p,v){
              ++p.count;
              p.sum_ttl += v.ttl;
              p.avg = p.sum_ttl / p.count;
              return p;
            },
            function(p,v){
              --p.count;p.sum_ttl -= v.ttl;
              p.avg = p.sum_ttl / p.count;
              return p;
            },
            function(){
            return {count: 0, sum_ttl: 0, avg: 0};
             }
            );

          var chart = dc.barChart("#per-month")
            .width(900)
            .height(250)
            .gap(2)
            .dimension(timeDimension)
            .group(timeGroup)
            .centerBar(true)
            .x(d3.time.scale().domain(time_domain))
            .xUnits(d3.time.months);

          chart.xAxis().ticks(d3.time.months, 2)
                       .tickFormat(d3.time.format("%b %Y"));

          var weekChart = dc.barChart("#per-week")
            .width(900)
            .height(250)
            .gap(2)
            .dimension(weekDimension)
            .group(weekGroup)
            .centerBar(true)
            .x(d3.time.scale().domain(week_domain))
            .xUnits(d3.time.weeks);

          var repoChart = dc.rowChart("#repo-names")
            .width(300)
            .height(180)
            .group(repoGroup)
            .dimension(repoDimension)
            .colors(['#501FAC', '#6742AC', '#7D64AC', '#9487AC']);

          repoChart.xAxis().ticks(5);

          var lifetimes = dc.lineChart("#lifetimes")
            .width(900)
            .height(250)
            .dimension(timeDimension)
            .group(lifetimeGroup)
            .x(d3.time.scale().domain(time_domain))
            .xUnits(d3.time.months)
            .renderArea(true);

            lifetimes.xAxis().ticks(d3.time.months, 2)
                             .tickFormat(d3.time.format("%b %Y"));

            lifetimes.valueAccessor(function(p) { return p.value.avg; });

          dc.renderAll();
      });
   </script>

   <div id='per-month'></div>
   <div id='repo-names'></div>
   <div id='lifetimes'></div>
   <div id='per-week'></div>
</body>
